// ===================================
// DESIGN TOKENS - Syrian Marketplace
// ===================================

// Syrian Brand Colors
$syrian-blue: hsl(214, 69%, 32%);
$syrian-red: hsl(350, 84%, 44%);

// Color Palette
$colors: (
  // Brand
  primary: $syrian-blue,
  secondary: $syrian-red,
  
  // Semantic
  success: hsl(142, 76%, 36%),
  warning: hsl(38, 92%, 50%),
  error: hsl(0, 84%, 60%),
  info: hsl(217, 91%, 60%),
  
  // Neutrals
  white: hsl(0, 0%, 100%),
  black: hsl(0, 0%, 0%),
  
  // Grays
  gray-50: hsl(210, 20%, 98%),
  gray-100: hsl(220, 14%, 96%),
  gray-200: hsl(220, 13%, 91%),
  gray-300: hsl(216, 12%, 84%),
  gray-400: hsl(218, 11%, 65%),
  gray-500: hsl(220, 9%, 46%),
  gray-600: hsl(215, 14%, 34%),
  gray-700: hsl(217, 19%, 27%),
  gray-800: hsl(215, 28%, 17%),
  gray-900: hsl(222, 84%, 5%),
);

// Spacing System (inspired by your xs, sm, md, lg, xl approach)
$spacing: (
  0: 0,
  px: 1px,
  0.5: 0.125rem,   // 2px
  1: 0.25rem,      // 4px
  1.5: 0.375rem,   // 6px
  2: 0.5rem,       // 8px
  2.5: 0.625rem,   // 10px
  3: 0.75rem,      // 12px
  3.5: 0.875rem,   // 14px
  4: 1rem,         // 16px
  5: 1.25rem,      // 20px
  6: 1.5rem,       // 24px
  7: 1.75rem,      // 28px
  8: 2rem,         // 32px
  9: 2.25rem,      // 36px
  10: 2.5rem,      // 40px
  11: 2.75rem,     // 44px
  12: 3rem,        // 48px
  14: 3.5rem,      // 56px
  16: 4rem,        // 64px
  20: 5rem,        // 80px
  24: 6rem,        // 96px
  28: 7rem,        // 112px
  32: 8rem,        // 128px
  
  // Semantic spacing (your approach)
  xs: 0.25rem,     // 4px
  sm: 0.5rem,      // 8px
  md: 1rem,        // 16px
  lg: 2rem,        // 32px
  xl: 4rem,        // 64px
  xxl: 8rem,       // 128px
);

// Typography
$font-sizes: (
  xs: 0.75rem,     // 12px
  sm: 0.875rem,    // 14px
  base: 1rem,      // 16px
  lg: 1.125rem,    // 18px
  xl: 1.25rem,     // 20px
  2xl: 1.5rem,     // 24px
  3xl: 1.875rem,   // 30px
  4xl: 2.25rem,    // 36px
  5xl: 3rem,       // 48px
  6xl: 3.75rem,    // 60px
);

$font-weights: (
  normal: 400,
  medium: 500,
  semibold: 600,
  bold: 700,
);

$line-heights: (
  none: 1,
  tight: 1.25,
  snug: 1.375,
  normal: 1.5,
  relaxed: 1.625,
  loose: 2,
);

// Font Families (learning from your Arabic/Latin approach)
$font-families: (
  sans: ('Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif),
  arabic: ('Cairo', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif),
  mono: ('JetBrains Mono', 'Fira Code', Consolas, monospace),
);

// Breakpoints (your responsive approach)
$breakpoints: (
  sm: 640px,
  md: 768px,
  lg: 1024px,
  xl: 1280px,
  2xl: 1536px,
);

// Container sizes (learning from your container system)
$container-max-widths: (
  sm: 640px,
  md: 768px,
  lg: 1024px,
  xl: 1280px,
  2xl: 1400px,
  full: 100%,
);

// Border radius
$radius: (
  none: 0,
  sm: 0.25rem,
  base: 0.375rem,
  md: 0.5rem,
  lg: 0.75rem,
  xl: 1rem,
  2xl: 1.5rem,
  3xl: 2rem,
  full: 9999px,
);

// Shadows
$shadows: (
  sm: (0 1px 2px 0 rgb(0 0 0 / 0.05)),
  base: (0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)),
  md: (0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)),
  lg: (0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)),
  xl: (0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)),
  2xl: (0 25px 50px -12px rgb(0 0 0 / 0.25)),
);

// Z-index scale
$z-index: (
  hide: -1,
  auto: auto,
  base: 0,
  docked: 10,
  sidebar: 100,
  dropdown: 1000,
  sticky: 1100,
  banner: 1200,
  overlay: 1300,
  modal: 1400,
  popover: 1500,
  skipLink: 1600,
  toast: 1700,
  tooltip: 1800,
);

// Transitions
$transitions: (
  none: none,
  all: (all 150ms cubic-bezier(0.4, 0, 0.2, 1)),
  default: (color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter) 150ms cubic-bezier(0.4, 0, 0.2, 1),
  colors: (color, background-color, border-color, text-decoration-color, fill, stroke) 150ms cubic-bezier(0.4, 0, 0.2, 1),
  opacity: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1),
  shadow: box-shadow 150ms cubic-bezier(0.4, 0, 0.2, 1),
  transform: transform 150ms cubic-bezier(0.4, 0, 0.2, 1),
);

// Helper functions
@function get($map, $key) {
  @if map-has-key($map, $key) {
    @return map-get($map, $key);
  } @else {
    @error "Key `#{$key}` not found in map";
  }
}

// Specific getter functions
@function color($key) { @return get($colors, $key); }
@function space($key) { @return get($spacing, $key); }
@function text($key) { @return get($font-sizes, $key); }
@function weight($key) { @return get($font-weights, $key); }
@function radius($key) { @return get($radius, $key); }
@function shadow($key) { @return get($shadows, $key); }
@function z($key) { @return get($z-index, $key); }
@function breakpoint($key) { @return get($breakpoints, $key); }