// ===================================
// TYPOGRAPHY SYSTEM
// ===================================

// Font loading (your approach but optimized)
:root {
  --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  --font-arabic: 'Cairo', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  --font-mono: 'JetBrains Mono', 'Fira Code', Consolas, monospace;
}

// Default font based on locale (your Arabic/Latin strategy)
:root {
  font-family: var(--font-sans);
}

[lang="ar"],
[dir="rtl"] {
  font-family: var(--font-arabic);
}

body {
  @include text-style(base, normal, normal);
  color: hsl(var(--text-primary));
}

// Heading scale
h1,
h2,
h3,
h4,
h5,
h6 {
  color: hsl(var(--text-primary));
  font-weight: weight(semibold);
  line-height: get($line-heights, tight);
  text-wrap: balance;
}

h1 {
  @include text-style(4xl, bold, tight);
  
  @include respond-below(md) {
    @include text-style(3xl, bold, tight);
  }
}

h2 {
  @include text-style(3xl, semibold, tight);
  
  @include respond-below(md) {
    @include text-style(2xl, semibold, tight);
  }
}

h3 {
  @include text-style(2xl, semibold, tight);
  
  @include respond-below(md) {
    @include text-style(xl, semibold, tight);
  }
}

h4 {
  @include text-style(xl, semibold, snug);
}

h5 {
  @include text-style(lg, semibold, snug);
}

h6 {
  @include text-style(base, semibold, normal);
}

// Body text
p {
  color: hsl(var(--text-secondary));
  text-wrap: pretty;
  max-width: 65ch;
}

// Text utilities
.text-xs { @include text-style(xs); }
.text-sm { @include text-style(sm); }
.text-base { @include text-style(base); }
.text-lg { @include text-style(lg); }
.text-xl { @include text-style(xl); }
.text-2xl { @include text-style(2xl); }
.text-3xl { @include text-style(3xl); }
.text-4xl { @include text-style(4xl); }

.font-normal { font-weight: weight(normal); }
.font-medium { font-weight: weight(medium); }
.font-semibold { font-weight: weight(semibold); }
.font-bold { font-weight: weight(bold); }

.text-primary { color: hsl(var(--text-primary)); }
.text-secondary { color: hsl(var(--text-secondary)); }
.text-muted { color: hsl(var(--text-muted)); }

.text-success { color: hsl(var(--success)); }
.text-warning { color: hsl(var(--warning)); }
.text-error { color: hsl(var(--error)); }

// Text alignment (RTL aware)
.text-start { text-align: start; }
.text-center { text-align: center; }
.text-end { text-align: end; }

// Text truncation
.truncate { @include truncate; }
.line-clamp-1 { @include line-clamp(1); }
.line-clamp-2 { @include line-clamp(2); }
.line-clamp-3 { @include line-clamp(3); }