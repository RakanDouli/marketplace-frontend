@import '../../../../../styles/variables.scss';

// Wizard content wrapper
.wizardContent {
  display: flex;
  flex-direction: column;
  gap: $space-lg;
}

// Progress Indicator
.progress {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: $space-lg;
  gap: $space-md;
}

.step {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: $space-xs;
  min-width: 120px;

  span:first-child {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: $weight-bold;
    border: 2px solid $border;
    color: $text-muted;
    background: $bg;
  }

  span:last-child {
    color: $text-muted;
    text-align: center;
  }

  &.active {
    span:first-child {
      background: $primary;
      border-color: $primary;
      color: $text-inverse;
    }
    span:last-child {
      color: $primary;
      font-weight: $weight-medium;
    }
  }

  &.completed {
    span:first-child {
      background: $success;
      border-color: $success;
      color: $text-inverse;
    }
    span:last-child {
      color: $success;
    }
  }
}

.progressLine {
  flex: 1;
  height: 2px;
  background: $border;
  margin: 0 $space-sm;
}

// Step Content
.stepContent {
  padding: $space-lg;
}

// Form Styles
.formGroup {
  margin-bottom: $space-lg;

  label {
    display: block;
    margin-bottom: $space-xs;
    color: $text;
    font-weight: $weight-medium;
  }
}

.input,
.textarea {
  width: 100%;
  padding: $space-sm $space-md;
  border: 1px solid $border;
  border-radius: $radius-md;
  background: $bg;
  color: $text;
  font-family: inherit;

  &:focus {
    outline: none;
    border-color: $primary;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }

  &.disabled {
    background: $surface;
    color: $text-muted;
    cursor: not-allowed;
  }

  &::placeholder {
    color: $text-muted;
  }
}

.textarea {
  resize: vertical;
  min-height: 80px;
}

.helpText {
  color: $text-muted;
  margin-top: $space-xs;
  display: block;
}

// Step Actions
.stepActions {
  display: flex;
  justify-content: space-between;
  gap: $space-md;
  margin-top: $space-xl;
  padding-top: $space-lg;
  border-top: 1px solid $border;
}

// Permissions
.permissionsHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: $space-lg;
  padding: $space-md;
  background: $surface;
  border-radius: $radius-md;
}

.permissionsInfo {
  display: flex;
  align-items: center;
  gap: $space-sm;
  color: $text;
  font-weight: $weight-medium;

  svg {
    color: $primary;
  }
}

.permissionsLegend {
  display: flex;
  gap: $space-md;
}

.legendItem {
  display: flex;
  align-items: center;
  gap: $space-xs;
  color: $text-muted;

  svg {
    color: $text-muted;
  }
}

.permissionsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: $space-md;
}

.featureCard {
  border: 1px solid $border;
  border-radius: $radius-md;
  padding: $space-md;
  background: $bg;

  &.active {
    border-color: $primary;
    background: rgba(59, 130, 246, 0.02);
    box-shadow: 0 0 0 1px rgba(59, 130, 246, 0.1);
  }

  &:hover {
    border-color: $primary;
  }
}

.featureHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: $space-md;
}

.featureInfo {
  flex: 1;
}

.featureToggle {
  display: flex;
  align-items: center;
  gap: $space-xs;

  input[type="checkbox"] {
    width: 16px;
    height: 16px;
  }

  label {
    color: $text-muted;
    cursor: pointer;
    margin-bottom: 0;
  }
}

.permissionButtons {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: $space-xs;
}

.permissionBtn {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: $space-xs;
  padding: $space-xs $space-sm;
  border: 1px solid $border;
  border-radius: $radius-base;
  background: $bg;
  color: $text-muted;
  cursor: pointer;

  &:hover {
    background: $surface;
    border-color: $primary;
  }

  &.active {
    background: $primary;
    border-color: $primary;
    color: $text-inverse;

    svg {
      color: $text-inverse;
    }
  }

  svg {
    color: inherit;
  }

  span {
    font-weight: $weight-medium;
  }
}

// Delete Modal
.deleteContent {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: $space-lg;
  padding: $space-md 0;
}

.warningIcon {
  color: $error;
  display: flex;
  justify-content: center;
}

.roleInfo {
  width: 100%;
  text-align: right;
}

.roleDetails {
  background: $surface;
  padding: $space-md;
  border-radius: $radius-md;
  border: 1px solid $border;
  margin-top: $space-sm;
  display: flex;
  flex-direction: column;
  gap: $space-xs;
}

.warningBox {
  display: flex;
  gap: $space-md;
  padding: $space-md;
  background: $error-bg;
  border: 1px solid $error;
  border-radius: $radius-md;
  width: 100%;
  text-align: right;

  svg {
    color: $error;
    flex-shrink: 0;
    margin-top: 2px;
  }

  ul {
    margin: $space-xs 0 0 0;
    padding-right: $space-md;
    color: $text;

    li {
      line-height: $line-normal;
      margin-bottom: $space-xs;

      &:last-child {
        margin-bottom: 0;
      }
    }
  }
}

.deleteActions {
  display: flex;
  justify-content: center;
  gap: $space-md;
}

// Loading
.loadingPermissions {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: $space-xl;
  color: $text-muted;
  font-style: italic;
}

// Responsive
@media (max-width: $breakpoint-md) {
  .stepContent {
    padding: $space-md;
  }

  .progress {
    padding: $space-md;
    flex-direction: column;
    gap: $space-sm;

    .progressLine {
      display: none;
    }
  }

  .step {
    flex-direction: row;
    min-width: auto;
    gap: $space-sm;

    span:first-child {
      width: 24px;
      height: 24px;
    }
  }

  .permissionsGrid {
    grid-template-columns: 1fr;
  }

  .permissionsHeader {
    flex-direction: column;
    gap: $space-sm;
    align-items: stretch;
  }

  .permissionsLegend {
    justify-content: center;
    flex-wrap: wrap;
  }

  .stepActions,
  .deleteActions {
    flex-direction: column-reverse;
  }
}

@media (max-width: $breakpoint-sm) {
  .featureHeader {
    flex-direction: column;
    gap: $space-sm;
  }

  .permissionButtons {
    grid-template-columns: 1fr;
  }
}
