// Vue-style button with ripple effect (new main button style)
.btnPadding {
  padding: $space-sm $space-md !important;
}

.btn {
  // Button reset styles
  background: none;
  border: 1px solid $text;
  font: inherit;
  cursor: pointer;
  outline: none;

  // Layout
  display: inline-flex;
  align-items: center;
  gap: $space-sm;
  height: 40px;
  border-radius: $radius-md;
  justify-content: center;
  padding: $space-sm;
  margin: $space-md $space-sm;
  position: relative;
  overflow: hidden;
  min-width: 40px;
  text-decoration: none;
  transition: all 0.3s ease-out;

  &:first-of-type {
    margin: $space-md 0 $space-md $space-md;
  }

  @media screen and (max-width: 768px) {
    &:first-of-type {
      margin: $space-sm $space-xs;
    }
    margin: $space-sm $space-xs;
  }

  // Variant styles
  &--primary {
    background-color: $primary;
    color: $text-inverse;
    border: none;

    &:hover {
      .round {
        background: $secondary;
        animation: rippleEffect 1.5s ease forwards;
      }
    }
  }

  &--secondary {
    background-color: $secondary;
    color: $text-inverse;
    border: none;

    &:hover {
      .round {
        background: $primary;
        animation: rippleEffect 1.5s ease forwards;
      }
    }
  }

  &--outline {
    background-color: $bg;
    border: 1px solid $border;
    color: $text;

    &:hover {
      background-color: $primary;
      color: $text-inverse;

      .round {
        background: $secondary;
        animation: rippleEffect 1.5s ease forwards;
      }
    }
  }

  &--success {
    background-color: $success;
    color: $text-inverse;
    border: none;

    &:hover .round {
      background: $primary;
      animation: rippleEffect 1.5s ease forwards;
    }
  }

  &--danger {
    background-color: $error;
    color: $text-inverse;
    border: none;

    &:hover .round {
      background: $primary;
      animation: rippleEffect 1.5s ease forwards;
    }
  }

  .arrow {
    font-size: 1.125rem;
    z-index: 1;
    transform: rotate(-45deg);
    transition: all 0.3s ease-out;
    display: flex;
    align-items: center;
  }

  .title {
    margin: 0;
    transition: all 0.3s ease-out;
    text-transform: uppercase;
    font-size: 1rem;
    font-weight: $weight-bold;
    letter-spacing: 1px;
    z-index: 1;
    display: flex;
    align-items: center;
    gap: $space-xs;
  }

  .round {
    width: 20px;
    height: 20px;
    position: absolute;
    display: block;
    content: "";
    border-radius: $radius-full;
    opacity: 1;

    &.ripple {
      left: 0;
      top: 0;
    }
  }

  @keyframes rippleEffect {
    0% {
      transform: scale(1);
      opacity: 0.11;
    }
    2% {
      transform: scale(1);
      opacity: 1;
    }
    100% {
      transform: scale(30);
    }
  }
}

.arrowLeft {
  display: none;
}

.arrowRight {
  display: block;
}

:global([dir="rtl"]) {
  .arrowLeft {
    display: block;
  }
  .arrowRight {
    display: none;
  }
}

.loading {
  pointer-events: none;
  opacity: 0.7;
}

.loadingIcon {
  display: flex;
  align-items: center;
  justify-content: center;
}

.icon {
  display: flex;
  align-items: center;
  justify-content: center;
}
// Language Selector Dropdown
.languageSelector {
  position: relative;
}

.languageTrigger {
  gap: $space-xs;

  .chevron {
    transition: transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);

    &.open {
      transform: rotate(180deg);
    }
  }
}

.languageDropdown {
  position: absolute;
  top: 100%;
  right: 0;
  margin-top: $space-xs;
  background-color: $surface;
  border: 1px solid $border;
  border-radius: $radius-md;
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  min-width: 160px;
  z-index: 1000;
  overflow: hidden;
}

.languageOption {
  // Button reset
  background: none;
  border: none;
  font: inherit;
  cursor: pointer;
  outline: none;

  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  padding: $space-sm $space-md;
  background-color: transparent;
  color: $text;
  transition: color, background-color, border-color, text-decoration-color, fill,
    stroke 0.15s cubic-bezier(0.4, 0, 0.2, 1);

  &:hover {
    background-color: $surface;
  }

  &.active {
    background-color: $primary;
    color: $text-inverse;
  }
}

.languageName {
  font-size: 0.875rem;
  font-weight: $weight-medium;
}

.languageNative {
  font-size: 0.75rem;
  color: $text-muted;
}

.themeToggle {
  font-size: $font-lg;
  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);

  &:hover {
    transform: scale(1.1);
  }

  &:active {
    transform: scale(0.95);
  }
}
