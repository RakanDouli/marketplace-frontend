@import "../../styles/variables";
.filterAside {
  background-color: $bg;
}
.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-bottom: $space-md;
  border-bottom: 1px solid $border;
  margin-bottom: $space-lg;

  .headerContent {
    display: flex;
    align-items: center;
    gap: $space-sm;
    color: $primary;

    .title {
      margin: 0;
      color: $text;
    }
  }

  .headerActions {
    display: flex;
    align-items: center;
    gap: $space-xs;
  }

  .resetButton {
    color: $primary;
    svg {
      width: 22px;
    }
  }

  .closeButton {
    display: flex;
    align-items: center;
    justify-content: center;
    background: none;
    border: none;
    color: $text-muted;
    cursor: pointer;
    padding: $space-xs;
    border-radius: $radius-sm;
    transition: all 0.2s ease;

    &:hover {
      background-color: $surface;
      color: $text;
    }

    &:active {
      transform: scale(0.95);
    }
  }

  .resetButton {
    &:hover {
      color: $text;
      background-color: $bg;
    }
  }

  .closeButton {
    // Hide close button on desktop
    @media (min-width: $breakpoint-lg) {
      display: none;
    }
  }
}

.filterContent {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: $space-sm;
  margin-bottom: $space-lg;

  // Add padding on mobile to account for fixed header
  @media (max-width: 767px) {
    padding: $space-md;
    padding-top: 0; // Header already has padding
  }

  .loading {
    padding: $space-lg;
    text-align: center;
    color: $text-muted;
  }
}

.filterSection {
  .sectionTitle {
    // margin: 0 0 $space-md 0;
    color: $text;
    font-weight: $weight-semibold;
  }
}

// Filter-specific form layouts (base input styles are in styles/base.scss)

.priceInputs,
.rangeInputs {
  display: flex;
  flex-direction: column;
  gap: $space-sm;

  .rangeInputFields {
    display: flex;
    gap: $space-sm;
  }

  .priceInput,
  .rangeInput {
    width: 50%;
    font-size: $font-xs;
  }

  .applyButton {
    align-self: flex-start;
    margin-top: $space-xs;
  }
}

.currencyInputs {
  display: flex;
  flex-direction: column;
  gap: $space-sm;
}

.actions {
  display: flex;
  flex-direction: column;
  gap: $space-sm;
  padding-top: $space-md;
  border-top: 1px solid $border;

  .clearButton,
  .applyButton {
    width: 100%;
    margin: 0; // Override button default margin
  }

  @media (min-width: $breakpoint-md) {
    flex-direction: row;

    .clearButton,
    .applyButton {
      flex: 1;
    }
  }
}

// Icon selector styles for car body types
.iconSelector {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
  gap: $space-sm;
  margin-top: $space-sm;
}

.iconOption {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: $space-xs;
  padding: $space-sm;
  background: $bg;
  border: 1px solid $border;
  border-radius: $radius-sm;
  cursor: pointer;
  transition: all 0.2s ease;
  color: $text-muted;

  &:hover {
    border-color: $primary;
    color: $primary;
    transform: translateY(-1px);
  }

  &.selected {
    background-color: $primary;
    border-color: $primary;
    color: $text-inverse;
  }

  .optionLabel {
    font-size: 0.75rem;
    text-align: center;
    line-height: 1.2;

    .optionCount {
      display: block;
      font-size: 0.65rem;
      opacity: 0.7;
      margin-top: 2px;
    }
  }
}

.countLoading {
  padding: $space-xs $space-sm;
  background-color: $surface;
  border-radius: $radius-sm;
  margin-bottom: $space-sm;
  opacity: 0.8;

  span {
    color: $text-muted;
    font-size: 12px;
  }
}

// Checkbox group styles for multi-select attributes
.checkboxGroup {
  display: flex;
  flex-direction: column;
  gap: $space-xs;
  margin-top: $space-sm;
}

.checkboxOption {
  display: flex;
  align-items: center;
  gap: $space-sm;
  padding: $space-xs $space-sm;
  border-radius: $radius-sm;
  cursor: pointer;
  transition: background-color 0.2s ease;

  &:hover {
    background-color: $surface;
  }

  input[type="checkbox"] {
    width: 16px;
    height: 16px;
    accent-color: $primary;
    cursor: pointer;
  }

  .checkboxLabel {
    flex: 1;
    font-size: 0.875rem;
    color: $text;
    cursor: pointer;

    .optionCount {
      color: $text-muted;
      font-size: 0.75rem;
      margin-left: $space-xs;
    }
  }
}
