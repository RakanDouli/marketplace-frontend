@import "../../styles/variables";

.floatingFilterButton {
  position: relative;
  display: none;
  margin-right: 0;
  z-index: $z-dropdown;

  @media (max-width: $breakpoint-lg) {
    display: flex;
  }
}

.loading {
  padding: $space-lg;
  text-align: center;
  color: $text-muted;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: $space-sm;
}

.filterSection {
  .sectionTitle {
    // margin: 0 0 $space-md 0;
    color: $text;
    font-weight: $weight-semibold;
  }
}

// Filter-specific form layouts (base input styles are in styles/base.scss)

.priceInputs,
.rangeInputs {
  display: flex;
  flex-direction: column;
  gap: $space-sm;

  .rangeInputFields {
    display: flex;
    gap: $space-sm;
  }

  .priceInput,
  .rangeInput {
    width: 50%;
  }

  .applyButton {
    align-self: flex-start;
    margin-top: $space-xs;
  }
}

.currencyInputs {
  display: flex;
  flex-direction: column;
  gap: $space-sm;
}

.actions {
  display: flex;
  flex-direction: column;
  gap: $space-sm;
  padding-top: $space-md;
  border-top: 1px solid $border;

  .clearButton,
  .applyButton {
    width: 100%;
    margin: 0; // Override button default margin
  }

  @media (min-width: $breakpoint-md) {
    flex-direction: row;

    .clearButton,
    .applyButton {
      flex: 1;
    }
  }
}

// Icon selector styles for car body types
.iconSelector {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
  gap: $space-sm;
  margin-top: $space-sm;
}

.iconOption {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: $space-xs;
  padding: $space-sm;
  background: $bg;
  border: 1px solid $border;

  cursor: pointer;
  transition: all 0.2s ease;
  color: $text-muted;

  &:hover {
    border-color: $primary;
    color: $primary;
    transform: translateY(-1px);
  }

  &.selected {
    background-color: $primary;
    border-color: $primary;
    color: $text-inverse;
  }

  &.disabled {
    opacity: 0.5;
    cursor: not-allowed;

    &:hover {
      border-color: $border;
      color: $text-muted;
      transform: none;
    }
  }

  .optionLabel {
    font-size: 0.75rem;
    text-align: center;
    line-height: 1.2;

    .optionCount {
      display: block;
      font-size: 0.65rem;
      opacity: 0.7;
      margin-top: 2px;
    }
  }
}

.countLoading {
  padding: $space-xs $space-sm;
  background-color: $surface;

  margin-bottom: $space-sm;
  opacity: 0.8;

  span {
    color: $text-muted;
    font-size: 12px;
  }
}

// Checkbox group styles for multi-select attributes
.checkboxGroup {
  display: flex;
  flex-direction: column;
  gap: $space-xs;
  margin-top: $space-sm;
}

.checkboxOption {
  display: flex;
  align-items: center;
  gap: $space-sm;
  padding: $space-xs $space-sm;

  cursor: pointer;
  transition: background-color 0.2s ease;

  &:hover {
    background-color: $surface;
  }

  input[type="checkbox"] {
    width: 16px;
    height: 16px;
    accent-color: $primary;
    cursor: pointer;
  }

  .checkboxLabel {
    flex: 1;
    font-size: 0.875rem;
    color: $text;
    cursor: pointer;

    .optionCount {
      color: $text-muted;
      font-size: 0.75rem;
      margin-left: $space-xs;
    }
  }

  // Disabled state for limited selections
  &.disabled {
    opacity: 0.5;
    cursor: not-allowed;

    &:hover {
      background-color: transparent;
    }

    input[type="checkbox"] {
      cursor: not-allowed;
    }

    .checkboxLabel {
      cursor: not-allowed;
    }
  }
}

// Selection counter for limited multi-selectors
.selectionCounter {
  padding: $space-xs $space-sm;
  background-color: $surface;

  margin-bottom: $space-sm;
  border: 1px solid $border;

  span {
    color: $text-muted;
    font-size: 0.75rem;
    font-weight: 500;
  }
}
